{{template "header" .}}

<script src="/js/ws.js" type="text/javascript"></script>


  <div class="row">
    <div class="col-6"> 
      <div class="container-fluid">
        <h5 style="text-align:center">Received SSF Messages from Okta</h5>
        <div>
          <textarea style="resize:none" class="form-control" id="ssfReceiveMessageArea" name="ssfReceiveMessageArea" rows="30" cols="10" readonly></textarea>
        </div>
      </div>
    </div>

    <div class="col-6">
      <div class="container-fluid">
        <iframe src="/ssf/receiver/app/embed" style="width: 100%; height: 100%"></iframe>
      </div>
    </div>
  </div>


<script type="text/javascript">
    var ssfReceiveSocket;
    intiializeSsfReceiverWS();


    /*
      WS support
    */
    function intiializeSsfReceiverWS() {
      console.log("Attempting intiializeSsfReceiverWS Connection...");
      if (window.location.protocol.includes("https")) {
          console.log("Attempting wss..");
          ssfReceiveSocket = new WebSocket("wss://" + location.host + "/ssf/receiver/app/ws");
      } else {
          ssfReceiveSocket = new WebSocket("ws://" + location.host + "/ssf/receiver/app/ws");
      }
     
      ssfReceiveSocket.onopen = () => {
          console.log("Successfully Connected intiializeSsfReceiverWS()");
          ssfReceiveWsPing();
      };

      ssfReceiveSocket.onmessage = ssfReceiveOnMessage;
      ssfReceiveSocket.onclose = ssfReceiveOnClose;
      ssfReceiveSocket.onerror = ssfReceiveOnError;
    }

    function ssfReceiveOnMessage(event) {
      console.log('intiializeSsfReceiverWS message received')
      console.log(event.data);
      const jsonObj = JSON.parse(event.data);
      var msg = createMessageReceivedHeader();
      msg += JSON.stringify(jsonObj, '', 2)
      msg += '\n' + document.getElementById('ssfReceiveMessageArea').value;
      document.getElementById('ssfReceiveMessageArea').value = msg;
      document.getElementById('ssfReceiveMessageArea').scrollTo(0, 0);
    }

    function ssfReceiveOnClose(event) {
      console.log("intiializeSsfReceiverWS Socket Closed Connection: ", event);
      ssfReceiveSocket.send("Client Closed!")
    }

    function ssfReceiveOnError(error) {
      console.log("intiializeSsfReceiverWS Socket Error: ", error);
    }

    function ssfReceiveSendMessage(msg) {
      ssfReceiveSocket.send(msg);
    }

    function ssfReceiveWsPing() {
      if (!ssfReceiveSocket) return;
      if (ssfReceiveSocket.readyState !== 1) return;
      ssfReceiveSendMessage('{"uuid": "ping"}');
      setTimeout(ssfReceiveWsPing, 10000);
    }


    /*
      Helpers
    */
    function createMessageReceivedHeader() {
      return `
-------------------------------------------------------------------
                          Received Message                          
-------------------------------------------------------------------
`
    }

</script>

{{template "footer"}}